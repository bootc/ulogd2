README.source for ulogd2
========================

This is a pretty standard 3.0 (quilt) format package, using debhelper 9. There
are no gotchas that I am aware of that may affect NMUs or similar.

git-buildpackage is used to maintain the git tree, and debian/gbp.conf is
included to configure it for this package.

Non-maintainer uploads
----------------------

If you want to be extra-helpful when doing an NMU, please follow these few
simple requests so that I can incorporate your changes into the package as
easily as possible. Note that all of this section is optional, so you do not
*have* to do any of this should you not want to.

### Using Alioth / collab-maint

Clone the git repo in the usual way and commit your changes to your local clone.
Once you have uploaded your NMU to the archive, push your changes back to the
repo on Alioth. If you want to be extra-helpful, use git-import-dsc on your NMU
upload in order to create all the relevant tags.

This procedure should be available to all DDs and any other Alioth guest users
who have been granted access to collab-maint.

### Using GitHub

Fork the packaging repo on GitHub (https://github.com/bootc/ulogd2), make your
changes to your fork, then send me a pull request when you are finished and your
NMU package is uploaded to the archive. I can then pull your changes into my
packaging branch very easily in order to ack your NMU.

### Using plain Git

Clone the git repo in the usual way, make your changes, then use
git-format-patch and git-send-email to email me the changes, in a manner similar
to kernel development:

(assuming you have made changes in a branch different to the 'debian' branch)
$ git format-patch --cover-letter -o patch_dir debian
(now sanity check the patch(es) in patch_dir/)
$ git send-email --no-chain-reply --suppress-cc=self patch_dir

Note that I don't require you sign off your patches nor run them through
checkpatch.pl like you would for kernel work.

Import new upstream release
---------------------------

Make sure you have the upstream git repo set up as a remote:

git remote add --tags upstream git://git.netfilter.org/ulogd2

Then, to import a new upstream release:

git checkout debian # 'debian' is the packaging branch
git fetch upstream # fetch upstream commits, including tags
git-import-orig --upstream-vcs-tag=ulogd-2.0.3 ../ulogd-2.0.3.tar.bz2
