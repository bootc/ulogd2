From: Jimmy Jones <jimmyjones2@gmx.co.uk>
Subject: Fix JSON output on big endian systems
Acked-by: Eric Leblond <eric@regit.org>
Acked-by: Chris Boot <debian@bootc.net>
Origin: upstream, commit:4f267553aede76dc91133ba88c69f8b8faf00b72
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=784935
Forwarded: not-needed
Last-Update: 2015-05-11

Corrects the output of JSON integers on big-endian systems.

---
 output/ulogd_output_JSON.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/output/ulogd_output_JSON.c b/output/ulogd_output_JSON.c
index e7ac642..3ad2620 100644
--- a/output/ulogd_output_JSON.c
+++ b/output/ulogd_output_JSON.c
@@ -158,7 +158,11 @@ static int json_interp(struct ulogd_pluginstance *upi)
 			break;
 		case ULOGD_RET_BOOL:
 		case ULOGD_RET_INT8:
+			json_object_set_new(msg, field_name, json_integer(key->u.value.i8));
+			break;
 		case ULOGD_RET_INT16:
+			json_object_set_new(msg, field_name, json_integer(key->u.value.i16));
+			break;
 		case ULOGD_RET_INT32:
 			json_object_set_new(msg, field_name, json_integer(key->u.value.i32));
 			break;
@@ -171,10 +175,17 @@ static int json_interp(struct ulogd_pluginstance *upi)
 					json_object_set_new(msg, "action", json_string("blocked"));
 				break;
 			}
+			json_object_set_new(msg, field_name, json_integer(key->u.value.ui8));
+			break;
 		case ULOGD_RET_UINT16:
+			json_object_set_new(msg, field_name, json_integer(key->u.value.ui16));
+			break;
 		case ULOGD_RET_UINT32:
+			json_object_set_new(msg, field_name, json_integer(key->u.value.ui32));
+			break;
 		case ULOGD_RET_UINT64:
 			json_object_set_new(msg, field_name, json_integer(key->u.value.ui64));
+			break;
 		default:
 			/* don't know how to interpret this key. */
 			break;
-- 
2.1.4

