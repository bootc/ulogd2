.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH ULOGD.CONF 5 "May 25, 2013" "Linux Netfilter"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
ulogd.conf \- netfilter/iptables logging daemon configuration filea
.SH SYNOPSIS
.B /etc/ulogd.conf
.SH DESCRIPTION
.I ulogd.conf
is the configuration file for
.BR ulogd .
The file broadly follows the
.B .ini
file format: it is divided into a number of sections containing
.BR key = value
pairs.
.SH "PLUGINS AND STACKS"
ulogd consists of a small core and a number of plugins. All the real power lies
in the plugins and the configured interactions between them. There are three
types of plugins:
.P
.B Input Plugins
act as data sources to ulogd. They get data from somewhere outside of ulogd, and
convert it into a list of ulogd keys.
.P
.B Filter Plugins
interpret and/or filter data that was received from an Input Plugin or another
filter plugin. A good example is parsing a raw packet to extract IPv4 or TCP
header information.
.P
.B Output Plugins
describe how and where to put the information after it has been processed by an
Input Plugin and optionally one or more Filter Plugins. The simplest example is
to build a line per packet and fprint it to a file. Some people might want to
log into a SQL database or want an output conforming to the IETF IPFIX language.
.P
A
.B Plugin Stack
is a series of plugins, starting with an Input Plugin, optionally
one or more Filter Plugins, followed by one Output Plugin at the end. Any number
of stacks may be configured to process one or more sources of input in a wide
variety of ways.
.SH "[GLOBAL] SECTION"
The
.B [global]
section is used for general configuration such as log level, loading plugins and
setting up stacks.
.IP \fBlogfile=\f1<filename>
destination file for messages generated by ulogd itself. This file is not used
for messages originating from iptables. This can be set to the string
.I syslog
to send the messages to the system logger instead of to a file, or
.I stdout
to send messages to standard output.
.IP \fBloglevel=\f1<number>
sets the log level used for messages emitted by ulogd. Messages with a priority
lower than that listed in this configuration directive are
.B not
sent to the log file. ulogd uses the following log levels:
.RB "debug(" 1 "), info(" 3 "), notice(" 5 "), error(" 7 ") or fatal(" 8 ")."
The default log level is
.BR 5 .
Note that if the
.BR -l " or " --loglevel
options are passed as arguments to ulogd, the value from the command-line will
override any value given in this configuration file.
.IP \fBplugin=\f1<filename>
causes a plugin file to be loaded into ulogd. Plugins provide means to take
input from a source of data, process the information, then output said
information in a particular format. Note that loading plugins only permits the
functionality to be used in a stack, but does not automatically enable it
(e.g. loading the MySQL plugin doesn't connect to a database without further
configuration).
.IP "\fBstack=\f1<stack definition>"
defines a Plugin Stack. The definition is a comma-separated list of
.BR name : PLUGIN
pairs. The first tuple must point to an input plugin, the final tuple must point
to an output plugin, and any tuples in between must point to filter plugins. The
names in the tuples are used to name particular instances of a plugin, and are
also used for configuring each instance in individual sections of the
configuration file.
.SH "NFLOG INPUT PLUGIN"
The ulogd_inppkt_NFLOG plugin is an input plugin that collects packets from the
kernel NFLOG iptables target using a netlink socket. This target can be used in
place of the LOG target to bypass the kernel log ring buffer, which is much less
efficient than using netlink and can drown out other useful kernel log messages.
The NFLOG target is a more modern replacement for the ULOG target. The plugin
can be configured with the following directives:
.IP bufsize=<integer>
.IP group=<integer>
.IP unbind=<integer>
.IP bind=<integer>
.IP seq_local=<integer>
.IP seq_global=<integer>
.IP numeric_label=<integer>
.IP netlink_socket_buffer_size=<integer>
.IP netlink_socket_buffer_maxsize=<integer>
.IP netlink_qthreshold=<integer>
.IP netlink_qtimeout=<integer>
.SH "ULOG INPUT PLUGIN"
The ulogd_inppkt_ULOG plugin is an input plugin that collectes packets from the
kernel ULOG iptables target using a netlink socket. This target can be used in
place of the LOG target to bypass the kernel log ring buffer, which is much less
efficient than using netlink and can drown out other useful kernel log messages.
The ULOG target is still available, but has been replaced by the NFLOG target
in kernels >= 2.6.14. The plugin can be configured with the following
directives:
.IP bufsize=<integer>
.IP nlgroup=<integer>
.IP rmem=<integer>
.IP numeric_label=<integer>
.SH "UNIXSOCK INPUT PLUGIN"
.SH "NFACCT INPUT PLUGIN"
.SH "NFCT INPUT PLUGIN"
.SH "BASE FILTER PLUGIN"
.SH "HWHDR FILTER PLUGIN"
.SH "IFINDEX FILTER PLUGIN"
.SH "IP2BIN FILTER PLUGIN"
.SH "IP2HBIN FILTER PLUGIN"
.SH "IP2STR FILTER PLUGIN"
.SH "MARK FILTER PLUGIN"
.SH "PRINTFLOW FILTER PLUGIN"
.SH "PRINTPKT FILTER PLUGIN"
.SH "PWSNIFF FILTER PLUGIN"
.SH "GPRINT OUTPUT PLUGIN"
.SH "GRAPHITE OUTPUT PLUGIN"
.SH "LOGEMU OUTPUT PLUGIN"
.SH "NACCT OUTPUT PLUGIN"
.SH "OPRINT OUTPUT PLUGIN"
.SH "SYSLOG OUTPUT PLUGIN"
.SH "XML OUTPUT PLUGIN"
.SH FILES
.I /etc/ulogd.conf
.br
.I /usr/sbin/ulogd
.SH SEE ALSO
.BR ulogd (8)
.br
There is more documentation about the daemon and the database plugins
(including examples) in the directories
.nf 
.br 
.I /usr/share/doc/ulogd 
.br 
.fi
.I /usr/share/doc/ulogd-mysql
and
.nf 
.br
.I /usr/share/doc/ulogd-pgsql
.SH AUTHOR
This manual page was written by Chris Boot <bootc@bootc.net>, for the Debian
GNU/Linux system (but may be used by others).
